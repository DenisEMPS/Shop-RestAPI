// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/client": {
            "get": {
                "description": "Get all clients with pagination parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client"
                ],
                "summary": "Get All Clients",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful\tresponse\twith\tclients",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ClientDAO"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new client with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client"
                ],
                "summary": "Create Client",
                "parameters": [
                    {
                        "description": "Client Info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateClient"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "id\":int\t\"Successful response with client ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/find/": {
            "get": {
                "description": "Find a client by name and surname",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client"
                ],
                "summary": "Find Client by data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Surname",
                        "name": "surname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with client",
                        "schema": {
                            "$ref": "#/definitions/types.ClientDAO"
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/client/{id}": {
            "delete": {
                "description": "Delete client by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client"
                ],
                "summary": "Delete Client by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status\":\t\"ok\"\t\"Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update client adress information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client"
                ],
                "summary": "Update Client adress",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Adress info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AdressDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status\":\t\"ok\"\t\"Successful response",
                        "schema": {
                            "$ref": "#/definitions/handler.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/image": {
            "post": {
                "description": "Create a new image for product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Create Product Image",
                "parameters": [
                    {
                        "description": "Image and Product info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateImageProduct"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "uuid\":string\t\"Successful response with image ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/image/image_id/{id}": {
            "get": {
                "description": "Get image by image ID/uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Get Image by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with image",
                        "schema": {
                            "$ref": "#/definitions/types.Image"
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/image/product_id/{id}": {
            "get": {
                "description": "Get image by product ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Get Image by Product ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with image",
                        "schema": {
                            "$ref": "#/definitions/types.Image"
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/image/{id}": {
            "delete": {
                "description": "Delete image by image ID/uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Delete Image by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status\":\t\"ok\"\t\"Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update image by image id/uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Update Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image bytes",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Image"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status\":\t\"ok\"\t\"Successful response",
                        "schema": {
                            "$ref": "#/definitions/handler.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/product": {
            "get": {
                "description": "This endpoint returns products and images as a multipart/mixed response. The response includes a JSON part with products and binary parts for images.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "multipart/mixed"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get All products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Multipart/mixed array of json-data Products with corresponding binary part Images",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new product with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Create Product",
                "parameters": [
                    {
                        "description": "Product Info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "id\" :int\t\"Successful response with product ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "description": "This endpoint returns product and image as a multipart/mixed response. The response includes a JSON part with product and binary parts for image.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "multipart/mixed"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get Product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Multipart/mixed - json-data of Product with corresponding binary part Image",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Delete Product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status\":\t\"ok\"\t\"Successful response",
                        "schema": {
                            "$ref": "#/definitions/handler.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update product quantity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Update Product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product update info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ProductUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status\":\t\"ok\"\t\"Successful response",
                        "schema": {
                            "$ref": "#/definitions/handler.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/supplier": {
            "get": {
                "description": "Get all suppliers with follow up information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supplier"
                ],
                "summary": "Get All Suppliers",
                "responses": {
                    "200": {
                        "description": "data\":\t[]types.SupplierDAO\t\"Successful response with suppliers",
                        "schema": {
                            "$ref": "#/definitions/handler.DataResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new supplier with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supplier"
                ],
                "summary": "Create Supplier",
                "parameters": [
                    {
                        "description": "Supplier Info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateSupplier"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "id\":int\t\"Successful response with supplier ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/supplier/{id}": {
            "get": {
                "description": "Get supplier by ID with follow up information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supplier"
                ],
                "summary": "Get Supplier by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with supplier",
                        "schema": {
                            "$ref": "#/definitions/types.SupplierDAO"
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete supplier by supplier ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supplier"
                ],
                "summary": "Delete Supplier by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status\":\"ok\"\t\"Successful response",
                        "schema": {
                            "$ref": "#/definitions/handler.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update supplier adress information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "supplier"
                ],
                "summary": "Update Supplier Adress",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Adress info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AdressDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status\":\t\"ok\"\t\"Successful response",
                        "schema": {
                            "$ref": "#/definitions/handler.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request params",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.DataResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.SupplierDAO"
                    }
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.StatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "types.AdressDTO": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "types.ClientDAO": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "registration_date": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "types.CreateClient": {
            "type": "object",
            "required": [
                "birthday",
                "city",
                "country",
                "gender",
                "name",
                "street",
                "surname"
            ],
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "types.CreateImageProduct": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "types.CreateSupplier": {
            "type": "object",
            "required": [
                "city",
                "country",
                "name",
                "phone_number",
                "street"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "types.Image": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "types.Product": {
            "type": "object",
            "required": [
                "available_stock",
                "category",
                "last_update_date",
                "name",
                "price",
                "supplier_id"
            ],
            "properties": {
                "available_stock": {
                    "type": "integer"
                },
                "category": {
                    "type": "string"
                },
                "image": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "last_update_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "supplier_id": {
                    "type": "integer"
                }
            }
        },
        "types.ProductUpdate": {
            "type": "object",
            "required": [
                "available_stock"
            ],
            "properties": {
                "available_stock": {
                    "type": "integer"
                }
            }
        },
        "types.SupplierDAO": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Online-Shop API",
	Description:      "API server for online-shop Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
